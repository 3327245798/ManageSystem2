{"remainingRequest":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\src\\views\\admin\\user.vue?vue&type=style&index=0&id=91cfcab6&scoped=true&lang=scss&","dependencies":[{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\src\\views\\admin\\user.vue","mtime":1683442313896},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683432540072},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683432529030},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\postcss-loader\\src\\index.js","mtime":1683432529916},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1683432523256},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683432540690},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\vue-loader\\lib\\index.js","mtime":1683432523461}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJveHMgewogIHBhZGRpbmc6IDIwcHg7Cn0KLmNvbG9yLXRpdGxlewogIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgY29sb3I6ICMwMDA7Cn0K"},{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2TA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"boxs\">\n    <el-form\n        :model=\"queryParams\"\n        ref=\"queryForm\"\n        :inline=\"true\"\n    >\n      <el-form-item label=\"用户名称\" prop=\"name\">\n        <el-input\n            v-model=\"queryParams.name\"\n            placeholder=\"请输入名称\"\n            clearable\n            size=\"small\"\n        />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n            type=\"primary\"\n            icon=\"el-icon-search\"\n            size=\"small\"\n            @click=\"handleQuery\"\n        >搜索</el-button>\n      </el-form-item>\n    </el-form>\n    <el-button icon=\"el-icon-plus\" type=\"primary\" plain size=\"small\" @click=\"openDialog\">添加用户</el-button>\n\n    <el-table :data=\"userArr\" style=\"width: 100%\" v-loading=\"loading\">\n      <el-table-column label=\"编号\" align=\"center\" prop=\"id\" />\n      <el-table-column label=\"用户名称\" align=\"center\" prop=\"name\">\n        <template slot-scope=\"scope\">\n          {{scope.row.name}} <el-tag v-if=\"scope.row.admin===1\" size=\"mini\" effect=\"dark\">超级管理员</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"状态\" align=\"center\" prop=\"name\">\n        <template slot-scope=\"scope\">\n          <el-tag v-if=\"scope.row.status===1\" size=\"mini\" effect=\"dark\">正常</el-tag>\n          <el-tag v-else size=\"mini\" effect=\"dark\" type=\"danger\">禁用</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"账号归属\" align=\"center\" prop=\"name\" :formatter=\"formatMore\" />\n      <el-table-column label=\"备注\" align=\"center\" prop=\"remark\" />\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" :formatter=\"formatterCreateTime\" />\n      <el-table-column label=\"操作\" align=\"center\" width=\"350\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" v-if=\"scope.row.admin!==1\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" @click=\"upUserPwd(scope.row)\" type=\"warning\" icon=\"el-icon-edit\">修改密码</el-button>\n          <el-button size=\"mini\" v-if=\"scope.row.admin!==1\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n          <el-button size=\"mini\" @click=\"upTheme(scope.row)\" type=\"text\" icon=\"el-icon-edit\" >主题修改</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination\n        v-show=\"total > 0\"\n        :total=\"total\"\n        :page.sync=\"queryParams.page\"\n        :limit.sync=\"queryParams.size\"\n        @pagination=\"getUser\"\n    />\n    <el-dialog title=\"操作框\" :visible.sync=\"dialogVisible\" width=\"40%\">\n      <el-form class=\"demo-form-inline\" label-width=\"80px\" :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n        <el-form-item label=\"用户名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"请输入用户名称\" />\n        </el-form-item>\n\n        <el-form-item label=\"用户密码\" prop=\"pwd\" v-if=\"!form.id\">\n          <el-input  v-model=\"form.pwd\" placeholder=\"请输入密码\">\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\" >\n          <el-select v-model=\"form.status\" placeholder=\"请选择状态\" >\n            <el-option  label=\"正常\" :value=\"1\">\n            </el-option>\n            <el-option  label=\"禁用\" :value=\"0\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"角色选择\" prop=\"rolesId\" v-if=\"form.admin!==1\">\n          <el-select v-model=\"form.rolesId\" filterable placeholder=\"请选择角色\" multiple>\n            <el-option v-for=\"item in rolesArr\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"账号归属\" prop=\"moreId\" v-if=\"form.admin!==1\">\n          <el-select v-model=\"form.moreId\" filterable placeholder=\"请选择账号\">\n            <el-option v-for=\"item in moreArr\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"备注说明\">\n          <el-input v-model=\"form.remark\" placeholder=\"请输入备注\" />\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\" v-loading=\"addLoading\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button :type=\"form.id ? 'warning' : 'primary'\" @click=\"affirm\">{{\n            form.id ? \"确认修改\" : \"确认添加\"\n        }}</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"主题修改\" :visible.sync=\"themeOpen\" width=\"500\" >\n      <el-form class=\"demo-form-inline\" label-width=\"80px\" :model=\"form\" ref=\"themeForm\" >\n        <div style=\"text-align: center;margin-bottom: 30px;\" @click=\"defaultTheme\"><el-button type=\"primary\" size=\"mini\" plain>恢复默认主题</el-button></div>\n        <el-row style=\"text-align: center\">\n          <el-col :span=\"4\">\n            <div class=\"color-title\">默认背景</div>\n            <el-color-picker v-model=\"form.menuBg\" @change=\"changeColor($event,'--menuBg-color')\"  class=\"color-picker\"  popper-class=\"theme-picker-dropdown\" ></el-color-picker>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"color-title\">展开背景</div>\n            <el-color-picker v-model=\"form.menuSubBg\" @change=\"changeColor($event,'--menuSubBg-color')\"  class=\"color-picker\"  popper-class=\"theme-picker-dropdown\" ></el-color-picker>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"color-title\">默认文字</div>\n            <el-color-picker v-model=\"form.menuText\" @change=\"changeColor($event,'--menuText-color')\"  class=\"color-picker\"  popper-class=\"theme-picker-dropdown\" ></el-color-picker>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"color-title\">选中文字</div>\n            <el-color-picker v-model=\"form.menuActiveText\" @change=\"changeColor($event,'--menuActiveText-color')\"  class=\"color-picker\"  popper-class=\"theme-picker-dropdown\" ></el-color-picker>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"color-title\">当前选中展开文字</div>\n            <el-color-picker v-model=\"form.menuSubActiveText\" @change=\"changeColor($event,'--menuSubActiveText-color')\"  class=\"color-picker\"  popper-class=\"theme-picker-dropdown\" ></el-color-picker>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"color-title\">hover背景</div>\n            <el-color-picker v-model=\"form.menuHoverBg\" @change=\"changeColor($event,'--menuHoverBg-color')\"  class=\"color-picker\"  popper-class=\"theme-picker-dropdown\" ></el-color-picker>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\" v-loading=\"addLoading\">\n        <el-button @click=\"$router.go(0)\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"changeTheme\">确认修改</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport {getUser, addUser, upUser, delUser, getMoreAll, upUserPwd, getRolesAll,upTheme} from '@/api/admin';\nimport {formatDate} from \"@/utils\";\nimport md5 from 'js-md5';\nexport default {\n  name:\"User\",\n  data () {\n    return {\n      queryParams:{\n        page:1,\n        size:10\n      },\n      total:0,\n      loading:false,\n      addLoading:false,\n      userArr: [],\n      dialogVisible: false,\n      themeOpen:false,\n      rolesArr: [],\n      moreArr: [],\n      search: '',\n      form: {\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入用户名称', trigger: 'blur' },\n          { min: 3, max: 15, message: '长度在 3 到 15 个字符', trigger: 'blur' }\n        ],\n        pwd: [\n          { required: true, message: '请输入用户密码', trigger: 'blur' },\n          { min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur' },\n        ],\n        rolesId: [\n          { required: true, message: '请选择用户角色', trigger: 'change' }\n        ],\n        moreId: [\n          { required: true, message: '请选择归属账号', trigger: 'change' }\n        ],\n      },\n    }\n  },\n  async created () {\n    await this.getRoles();\n    await this.getMoreAll();\n    this.getUser()\n  },\n  methods: {\n    formatterCreateTime(row){\n      return formatDate(row.createTime);\n    },\n    formatMore (row) {\n      if(row.admin===1) return \"总管理\";\n      let res = this.moreArr.filter(t => t.id == row.moreId);\n      if (res.length == 0) return \"“账号不存在”\"\n      return res[0].name\n    },\n    handleDelete (index, row) {\n      this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'error'\n      }).then(async () => {\n        await delUser({ id: row.id });\n        this.getUser();\n        this.$message({\n          message: '删除成功！',\n          type: 'success'\n        });\n      })\n    },\n    resetForm () {\n      this.form = {status:1};\n    },\n    handleEdit (index, row) {\n      this.resetForm();\n      this.form = {...row};\n      this.$set(this.form, \"rolesId\", row.rolesId.split(\",\"));\n      this.dialogVisible = true;\n    },\n    async affirm () {\n      this.$refs['ruleForm'].validate(async (valid) => {\n        if (!valid) return;\n        try {\n          this.addLoading=true;\n          let rolesId=this.form.rolesId.join(\",\");\n          !this.form.id&& await addUser({...this.form,rolesId,pwd:md5(this.form.pwd)});\n          this.form.id&& await upUser({ ...this.form,rolesId});\n          this.addLoading=false;\n          this.$message.success(this.form.id?'修改成功！':'添加成功！');\n          this.getUser();\n          this.dialogVisible = false;\n        }catch (e) {\n          this.addLoading=false;\n        }\n\n      });\n    },\n    upUserPwd(row){\n      let {name,admin}=row;\n      this.$prompt(admin===1?`当前修改的是《总管理》密码，请务必再次确认！`:`当前修改的是《${name}》密码`, '温馨提示', {\n        confirmButtonText: '确定修改',\n        cancelButtonText: '取消',\n        inputPattern: /.{6,15}/,\n        inputErrorMessage: '密码6-15位密码'\n      }).then(async ({ value }) => {\n        await upUserPwd({id:row.id,pwd:md5(value)});\n        this.$message.success(\"修改成功！\");\n        if(admin===1){\n          this.$store.dispatch(\"user/logout\");\n          this.$router.replace(\"/login\");\n        }\n      })\n    },\n    upTheme(row){\n      this.form={...row};\n      this.themeOpen=true;\n    },\n    changeColor(val,name){\n      document.getElementsByTagName('body')[0].style.setProperty(name,val);\n      name==='--menuBg-color'&&this.$store.dispatch('settings/changeSetting', {\n        key: 'theme',\n        value: val\n      });\n    },\n    async changeTheme(){\n      try {\n        this.addLoading=true;\n        await upTheme(this.form);\n        this.addLoading=false;\n        this.themeOpen=false;\n        this.$message.success(\"修改主题成功！\");\n        this.$router.go(0);\n      }catch (e) {\n        this.addLoading=false;\n      }\n    },\n    defaultTheme(){\n      let theme={\n        \"menuBg\":{val:\"#304156\",name:\"--menuBg-color\"},\n        \"menuSubBg\":{val:\"#304156\",name:\"--menuSubBg-color\"},\n        \"menuText\":{val:\"#bfcad5\",name:\"--menuText-color\"},\n        \"menuActiveText\":{val:\"#409eff\",name:\"--menuActiveText-color\"},\n        \"menuSubActiveText\":{val:\"#fff\",name:\"--menuSubActiveText-color\"},\n        \"menuHoverBg\":{val:\"#001528\",name:\"--menuHoverBg-color\"},\n      };\n\n      for (const themeKey in theme) {\n        this.changeColor(theme[themeKey].val,theme[themeKey].name);\n        this.form[themeKey]=theme[themeKey].val;\n      }\n    },\n    openDialog () {\n      this.resetForm();\n      this.dialogVisible = true\n    },\n    async getRoles () {\n      const {data} = await getRolesAll();\n      this.rolesArr = data.map(t=>{t.id=t.id.toString(); return t});\n    },\n    async getMoreAll () {\n      const {data} = await getMoreAll();\n      this.moreArr = data;\n    },\n    async getUser () {\n      this.loading=true;\n      const {data,total} = await getUser(this.queryParams);\n      this.loading=false;\n      this.userArr = data;this.total=total;\n    },\n    handleQuery(){\n      this.queryParams.page=1;\n      this.getUser();\n    }\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n.boxs {\n  padding: 20px;\n}\n.color-title{\n  margin-bottom: 10px;\n  color: #000;\n}\n</style>\n"]}]}