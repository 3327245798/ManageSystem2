{"remainingRequest":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\src\\views\\admin\\menu.vue?vue&type=style&index=0&id=ba054b8e&lang=scss&scoped=true&","dependencies":[{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\src\\views\\admin\\menu.vue","mtime":1682257123000},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683432540072},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683432529030},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\postcss-loader\\src\\index.js","mtime":1683432529916},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1683432523256},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683432540690},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\vue-loader\\lib\\index.js","mtime":1683432523461}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJveHMgewogIHBhZGRpbmc6IDIwcHg7Cn0K"},{"version":3,"sources":["menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAySA;AACA;AACA","file":"menu.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"boxs\">\n    <el-button type=\"primary\" plain icon=\"el-icon-plus\" size=\"mini\" @click=\"handleAdd\">新增</el-button>\n\n    <el-table v-if=\"refreshTable\" v-loading=\"loading\" :data=\"routerMenu\" row-key=\"id\" :default-expand-all=\"isExpandAll\" :tree-props=\"{ children: 'children' }\">\n<!--      <el-table-column prop=\"title\" label=\"菜单名称\" :show-overflow-tooltip=\"true\" width=\"160\" />-->\n      <el-table-column prop=\"icon\" label=\"菜单名称\"  width=\"200\">\n        <template slot-scope=\"scope\">\n          <svg-icon :icon-class=\"scope.row.meta.icon\" />\n          <span style=\"margin-left: 5px\">{{scope.row.title}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"sort\" label=\"排序\" width=\"60\" />\n      <el-table-column prop=\"component\" label=\"页面路径\" :show-overflow-tooltip=\"true\" />\n      <el-table-column prop=\"pathView\" label=\"路由地址\" width=\"150\" />\n      <el-table-column prop=\"roleKey\" label=\"权限字符\" />\n\n      <el-table-column label=\"当前状态\" align=\"center\" prop=\"createTime\">\n        <template slot-scope=\"scope\">\n          <el-tag v-if=\"scope.row.hidden == 0\">正常</el-tag>\n          <el-tag v-else type=\"danger\">隐藏</el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"类型\" align=\"center\" prop=\"menuType\">\n        <template slot-scope=\"scope\">\n          <el-tag type=\"warning\" v-if=\"scope.row.menuType == 'M'\">目录</el-tag>\n          <el-tag type=\"success\" v-if=\"scope.row.menuType == 'C'\">菜单</el-tag>\n          <el-tag type=\"info\" v-if=\"scope.row.menuType == 'F'\" >按钮</el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"更新时间\" align=\"center\" prop=\"createTime\" :formatter=\"formatTime\" />\n\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\" width=\"250\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\">修改</el-button>\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-plus\" @click=\"handleAdd(scope.row)\">新增</el-button>\n          <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog title=\"操作\" :visible.sync=\"dialogVisible\" width=\"800px\" :close-on-click-modal=\"false\">\n      <div>\n        <el-form ref=\"form\" :model=\"form\" label-width=\"100px\" :rules=\"rules\">\n          <el-row>\n            <el-col :span=\"24\">\n              <el-form-item label=\"上级菜单\" prop=\"parentId\">\n                <treeselect v-model=\"form.parentId\" :options=\"selectRouterMenu\" :normalizer=\"normalizer\" :show-count=\"true\" placeholder=\"选择上级菜单\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\">\n              <el-form-item label=\"菜单类型\" prop=\"menuType\">\n                <el-radio-group v-model=\"form.menuType\">\n                  <el-radio label=\"M\">目录</el-radio>\n                  <el-radio label=\"C\">菜单</el-radio>\n                  <el-radio label=\"F\">按钮</el-radio>\n                </el-radio-group>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"菜单名称\" prop=\"title\">\n                <el-input placeholder=\"请输入菜单名称\" v-model=\"form.title\" clearable>\n                </el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"权限字符\">\n                <el-input  v-model=\"form.roleKey\" placeholder=\"请输入权限字符\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\" v-if=\"form.menuType==='C'\">\n              <el-form-item label=\"页面名称\" prop=\"name\">\n                <el-input  placeholder=\"请输入页面名称（Name）英文\" v-model=\"form.name\" >\n                </el-input>\n              </el-form-item>\n            </el-col>\n\n              <el-col :span=\"12\" v-if=\"form.menuType==='C'||form.menuType==='M'\">\n                <el-form-item label=\"路由地址\" prop=\"path\">\n                  <el-input placeholder=\"请输入路由地址（/path）\" v-model=\"form.path\" >\n                  </el-input>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"12\" v-if=\"form.menuType==='C'\">\n                <el-form-item label=\"页面地址\" prop=\"component\">\n                  <el-input  placeholder=\"请输入页面地址（index/index）\" v-model=\"form.component\" clearable>\n                  </el-input>\n                </el-form-item>\n              </el-col>\n\n            <el-col :span=\"12\">\n              <el-form-item label=\"显示排序\">\n                <el-input-number v-model=\"form.sort\" controls-position=\"right\" :min=\"0\" :max=\"100\"></el-input-number>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\" >\n              <el-form-item label=\"菜单图标\" prop=\"icon\">\n                <el-popover placement=\"bottom-start\" width=\"460\" trigger=\"click\" @show=\"$refs['iconSelect'].reset()\">\n                  <IconSelect ref=\"iconSelect\" @selected=\"selected\" />\n                  <el-input slot=\"reference\" v-model=\"form.icon\" placeholder=\"点击选择图标\" readonly>\n                    <svg-icon v-if=\"form.icon\" slot=\"prefix\" :icon-class=\"form.icon\" class=\"el-input__icon\" style=\"height: 38px; width: 15px\" />\n\n                    <i v-else slot=\"prefix\" class=\"el-icon-search el-input__icon\" />\n                  </el-input>\n                </el-popover>\n              </el-form-item>\n            </el-col>\n\n            <el-col :span=\"12\" v-if=\"form.menuType==='C'\">\n              <el-form-item label=\"缓存状态\">\n                <el-radio-group v-model=\"form.noCache\">\n                  <el-radio :label=\"1\">否</el-radio>\n                  <el-radio :label=\"0\">是</el-radio>\n                </el-radio-group>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\" v-if=\"form.menuType!=='F'\">\n              <el-form-item label=\"显示状态\">\n                <el-radio-group v-model=\"form.hidden\">\n                  <el-radio :label=\"0\">显示</el-radio>\n                  <el-radio :label=\"1\">隐藏</el-radio>\n                </el-radio-group>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\" v-loading=\"addLoading\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"affirm\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { getRouterSystem, addMenu, changeMenu, delMenu } from '@/api/admin'\nimport { formatTime, deepClone } from '@/utils'\n// import the component\nimport Treeselect from '@riophae/vue-treeselect'\n// import the styles\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport IconSelect from '@/components/IconSelect'\nexport default {\n  name: \"Menu\",\n  data () {\n    let pathValidate=(rule, value, callback)=>{\n      let reg = /^\\//\n      if (!reg.test(value)) {\n        callback(new Error('首个字符必须为 /'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      routerMenu: [],\n      selectRouterMenu: [],\n      refreshTable: true,\n      loading: false,\n      addLoading:false,\n      isExpandAll: false,\n      dialogVisible: false,\n      form: {\n        icon: '',\n        sort: 0,\n        noCache: 1,\n        hidden: 0,\n        parentView: 0,\n        alone: 0,\n        menuType:\"C\"\n      },\n      rules: {\n        parentId: [\n          { required: true, message: '请选择父级菜单', trigger: 'change' }\n        ],\n        title: [\n          { required: true, message: '请输入菜单名称', trigger: 'blur' },\n        ],\n        name: [\n          { required: true, message: '请输入页面名称', trigger: 'blur' },\n        ],\n        path: [\n          { required: true, message: '请输入路由地址', trigger: 'blur' },\n          // { validator:pathValidate, message: '首个字符必须为 /', trigger: 'blur' },\n        ],\n        component: [\n          { required: true, message: '请输入页面地址', trigger: 'blur' },\n        ],\n        icon: [\n          { required: true, message: '请选择菜单图标', trigger: 'change' },\n        ],\n      }\n    }\n  },\n  created () {\n    this.getRouterSystem()\n  },\n  methods: {\n    // 选择图标\n    selected (name) {\n      this.form.icon = name;\n    },\n    async affirm () {\n      this.$refs[\"form\"].validate(async (valid) => {\n        if (!valid) return;\n        try {\n          this.addLoading=true;\n          if(this.form.menuType===\"F\"||this.form.menuType===\"M\"){\n            this.form.name=\"\";\n            this.form.component=\"/\";\n          }\n          !this.form.id&&await addMenu(this.form);\n          this.form.id&&await changeMenu(this.form);\n          this.addLoading=false;\n          this.$message.success(this.form.id?\"修改成功\":\"添加成功！\")\n          this.getRouterSystem();\n          this.dialogVisible = false;\n        }catch (e) {\n          this.addLoading=false;\n        }\n      });\n\n    },\n    formatTime (date) {\n      return formatTime(new Date(date.updateTime))\n    },\n    async getRouterSystem () {\n      this.loading=true;\n      const {data} = await getRouterSystem();\n      this.loading=false;\n      let { routerMenu } = data;\n      this.routerMenu = routerMenu\n      let selectRouterMenu = deepClone(routerMenu)\n      selectRouterMenu.unshift({\n        title: \"一级菜单\",\n        id: 0\n      });\n      this.selectRouterMenu = selectRouterMenu\n    },\n    //处理弹窗树形结构\n    normalizer (data) {\n      if (data.children && !data.children.length) {\n        delete data.children\n      }\n      return {\n        id: data.id,\n        label: data.title,\n        children: data.children\n      }\n    },\n    handleAdd (row) {\n      this.resetForm();\n      if (row.id !== undefined) this.form.parentId = row.id;\n      this.dialogVisible = true;\n    },\n    resetForm () {\n      this.form = {\n        id:undefined,\n        icon: '',\n        sort: 0,\n        noCache: 1,\n        hidden: 0,\n        parentView: 0,\n        alone: 0,\n        menuType:\"C\",\n        path:\"/\"\n      };\n    },\n    handleUpdate (row) {\n      this.resetForm();\n      let data={...row};\n      data.icon=row.meta.icon;\n      data.noCache=row.meta.noCache ? 1 : 0;\n      data.path=row.pathView;\n      this.form = data;\n      this.dialogVisible = true\n    },\n    handleDelete (row) {\n      this.$confirm(`此操作将永久删除【${row.title}】, 是否继续?`, '提示', {\n        confirmButtonText: '取消',\n        cancelButtonText: '确定',\n        type: 'warning',\n        distinguishCancelAndClose: true\n      }).catch(async (err) => {\n        if (err == \"cancel\") {\n          await delMenu({ id: row.id });\n          this.$message.success(\"删除成功！\");\n          this.getRouterSystem();\n        }\n      })\n    }\n  },\n  components: { Treeselect, IconSelect }\n}\n</script>\n<style lang=\"scss\" scoped>\n.boxs {\n  padding: 20px;\n}\n</style>\n"]}]}