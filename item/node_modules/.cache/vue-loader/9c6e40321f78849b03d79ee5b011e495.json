{"remainingRequest":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\src\\views\\admin\\role.vue?vue&type=style&index=0&id=91d33c60&scoped=true&lang=scss&","dependencies":[{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\src\\views\\admin\\role.vue","mtime":1682257123000},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683432540072},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683432529030},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\postcss-loader\\src\\index.js","mtime":1683432529916},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1683432523256},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683432540690},{"path":"E:\\研一下\\Vue学习\\前端\\vue_node_admin-master\\item\\node_modules\\vue-loader\\lib\\index.js","mtime":1683432523461}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJveHMgewogIHBhZGRpbmc6IDIwcHg7Cn0K"},{"version":3,"sources":["role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiOA;AACA;AACA","file":"role.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"boxs\">\n    <el-form\n        :model=\"queryParams\"\n        ref=\"queryForm\"\n        :inline=\"true\"\n    >\n      <el-form-item label=\"角色名称\" prop=\"name\">\n        <el-input\n            v-model=\"queryParams.name\"\n            placeholder=\"请输入名称\"\n            clearable\n            size=\"small\"\n        />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n            type=\"primary\"\n            icon=\"el-icon-search\"\n            size=\"small\"\n            @click=\"handleQuery\"\n        >搜索</el-button>\n      </el-form-item>\n    </el-form>\n    <el-button icon=\"el-icon-plus\" type=\"primary\" plain size=\"small\" @click=\"openDialog\">添加角色</el-button>\n    <el-table :data=\"rolesArr\" v-loading=\"loading\">\n      <el-table-column label=\"编号\" prop=\"id\" align=\"center\" width=\"60\" />\n      <el-table-column label=\"角色名称\" prop=\"name\" align=\"center\">\n        <template slot-scope=\"scope\"  >\n          {{ scope.row.name }}\n          <el-tag v-if=\"scope.row.roleKey === 'admin'\" size=\"mini\" effect=\"dark\"\n            >超级管理员</el-tag\n          >\n        </template>\n      </el-table-column>\n      <el-table-column label=\"权限字符\" prop=\"roleKey\" align=\"center\"  />\n      <el-table-column label=\"创建时间\" prop=\"roleKey\" align=\"createTime\" :formatter=\"formatterCreateTime\"  />\n      <el-table-column  width=\"200\" label=\"操作\">\n        <template slot-scope=\"scope\" v-if=\"scope.row.roleKey !== 'admin'\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.$index, scope.row)\"\n            >编辑</el-button\n          >\n          <el-button\n            size=\"mini\"\n            type=\"danger\"\n            @click=\"handleDelete(scope.$index, scope.row)\"\n            >删除</el-button\n          >\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n        v-show=\"total > 0\"\n        :total=\"total\"\n        :page.sync=\"queryParams.page\"\n        :limit.sync=\"queryParams.size\"\n        @pagination=\"getRoles\"\n    />\n\n    <el-dialog title=\"提示\" :visible.sync=\"dialogVisible\" width=\"40%\">\n      <el-form class=\"demo-form-inline\" label-width=\"80px\" :model=\"form\" :rules=\"rules\" ref=\"form\">\n        <el-form-item label=\"角色名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"请输入角色名称\" />\n        </el-form-item>\n        <el-form-item label=\"权限字符\" prop=\"roleKey\">\n          <el-input v-model=\"form.roleKey\" placeholder=\"请输入权限字符\" />\n        </el-form-item>\n        <el-form-item label=\"菜单权限\" prop=\"roles\">\n          <el-tree\n            ref=\"tree\"\n            :data=\"routerMenu\"\n            :props=\"props\"\n            show-checkbox\n            :check-on-click-node=\"true\"\n            node-key=\"id\"\n            :default-checked-keys=\"checkedRoles\"\n            :default-expanded-keys=\"checkedRoles\"\n            @check-change=\"handleCheckChange\"\n            @check=\"handleClick\"\n          />\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\" v-loading=\"addLoading\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button :type=\"form.id ? 'warning' : 'primary'\" @click=\"affirm\">{{\n          form.id ? \"确认修改\" : \"确认添加\"\n        }}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { getRouterSystem, getRoles, addRoles, upRoles, delRoles } from \"@/api/admin\";\nimport {formatDate} from \"@/utils\";\nexport default {\n  name:\"Role\",\n  data() {\n    return {\n      queryParams:{\n        page:1,\n        size:10\n      },\n      total:0,\n      loading:false,\n      addLoading:false,\n      dialogVisible: false,\n      routerMenu: [],\n      props: {\n        label: (t) => t.meta.title,\n        children: \"children\",\n      },\n      form:{},\n      rules:{\n        name:[\n          { required: true, message: '请输入角色名称', trigger: 'blur' },\n        ],\n        roles:[\n          { required: true, message: '请选择菜单权限', trigger: 'change' },\n        ]\n      },\n      rolesArr: [],\n      search: \"\",\n      name: \"\",\n      roles: [],\n      checkedRoles: [],\n      id: undefined,\n    };\n  },\n  created() {\n    this.getRouterSystem();\n    this.getRoles();\n  },\n  methods: {\n    formatterCreateTime(row){\n      return formatDate(row.createTime);\n    },\n    handleDelete(index, row) {\n      this.$confirm(\"此操作将永久删除该角色, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"error\",\n      }).then(async () => {\n        await delRoles({ id: row.id });\n        this.getRoles();\n        this.$message({\n          message: \"删除成功！\",\n          type: \"success\",\n        });\n      });\n    },\n    handleEdit(index, row) {\n      const {  roles } = row;\n      const checkedRoles = row.checkedRoles.split(\",\");\n      const rolesArr = roles.split(\",\");\n      this.form={...row};\n      this.roles = rolesArr;\n      this.dialogVisible = true;\n      this.$nextTick(()=>{\n        this.$refs.tree.setCheckedKeys([]);\n        this.checkedRoles = checkedRoles;\n      })\n    },\n    async affirm() {\n      let roles=this.$refs.tree.getCheckedNodes(false,true).map(t=>t.id);\n      let checkedRoles=this.$refs.tree.getCheckedKeys(true);\n      this.$set(this.form,\"roles\",roles.toString())\n      this.form.checkedRoles = checkedRoles.toString();\n      this.$refs.form.validate(async (validate)=>{\n        if(!validate) return;\n        try {\n          this.addLoading=true;\n          this.form.id && await upRoles(this.form);\n          !this.form.id &&await addRoles(this.form);\n          this.addLoading=false;\n          this.$message({\n            message: this.form.id ? \"修改成功\" : \"添加成功！\",\n            type: \"success\",\n          });\n          this.clearEvent();\n          this.getRoles();\n          this.dialogVisible = false;\n        }catch (e) {\n          this.addLoading=false;\n        }\n      })\n\n    },\n    clearEvent() {\n      this.$nextTick(()=>{\n        this.$refs.tree.setCheckedKeys([]);\n      });\n      this.form={};\n      this.roles = [];\n    },\n    openDialog() {\n      this.dialogVisible = true;\n      this.clearEvent();\n    },\n    async getRoles() {\n      this.loading=true;\n      const {data,total} = await getRoles(this.queryParams);\n      this.loading=false;\n      this.rolesArr = data;this.total=total;\n    },\n    handleQuery(){\n      this.queryParams.page=1;\n      this.getRoles();\n    },\n    async getRouterSystem() {\n      const {data} = await getRouterSystem();\n      const { routerMenu } = data;\n      this.routerMenu = routerMenu;\n\n    },\n    handleCheckChange(data, checked, indeterminate) {\n    },\n    handleClick(data, checked) {\n      this.roles = checked.checkedNodes;\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.boxs {\n  padding: 20px;\n}\n</style>\n"]}]}